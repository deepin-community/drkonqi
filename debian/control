Source: drkonqi
Section: kde
Priority: optional
Maintainer: Debian Qt/KDE Maintainers <debian-qt-kde@lists.debian.org>
Uploaders: Scarlett Moore <sgmoore@kde.org>,
           Patrick Franz <deltaone@debian.org>,
           Norbert Preining <norbert@preining.info>,
Build-Depends: cmake (>= 3.16~),
               dbus-x11,
               debhelper-compat (= 13),
               extra-cmake-modules (>= 5.86~),
               gettext,
               libkf5completion-dev (>= 5.86~),
               libkf5configwidgets-dev (>= 5.86~),
               libkf5coreaddons-dev (>= 5.86~),
               libkf5crash-dev (>= 5.86~),
               libkf5i18n-dev (>= 5.86~),
               libkf5idletime-dev (>= 5.86~),
               libkf5jobwidgets-dev (>= 5.86~),
               libkf5kio-dev (>= 5.86~),
               libkf5notifications-dev (>= 5.86~),
               libkf5service-dev (>= 5.86~),
               libkf5syntaxhighlighting-dev (>= 5.86~),
               libkf5wallet-dev (>= 5.86~),
               libkf5widgetsaddons-dev (>= 5.86~),
               libkf5windowsystem-dev (>= 5.86~),
               libqt5x11extras5-dev (>= 5.15.0~),
               pkg-kde-tools (>= 0.15.18~),
               qtbase5-dev (>= 5.15.0~),
               zlib1g-dev,
Standards-Version: 4.5.0
Homepage: https://invent.kde.org/plasma/drkonqi
Vcs-Browser: https://salsa.debian.org/qt-kde-team/kde/drkonqi
Vcs-Git: https://salsa.debian.org/qt-kde-team/kde/drkonqi.git
Rules-Requires-Root: no

Package: drkonqi
Architecture: any
Depends: ${misc:Depends}, ${shlibs:Depends}
Breaks: plasma-workspace (<< 4:5.14)
Replaces: plasma-workspace (<< 4:5.11)
Description: Crash handler for Qt applications
 Drkonqi shows a dialog for dealing with application crashes.
 .
 Drkonqi also doesn't technically require a process to actually crash, you
 can simply run it manually on any old pid. Do note that in most cases you
 only need to define the pid, however not giving certain cmdline options can
 change behavior somewhat drastically (e.g. kdeinit vs. notkdeinit behaves
 radically different as far as process name detection goes) . Drkonqi has a
 number of backends that may be used. Backends are stacked by order of
 preference, backends in the directory of the binary are most preferred.
 This means that you can dump debuggers/internal/ into your build's bin/
 directory and override for example gdb. This essentially allows you to
 replace the gdb debugger with a cat of a fixture file to not have to trace
 live processes at all.
